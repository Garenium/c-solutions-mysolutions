/* bool is_not_number(char* str) */
/* { */
/*     bool condition = false; */
/*     int negException = 0; */
/*     int spaceException = 0; */
/*     int zeroException = 0; */
/*     for(size_t i = 0; i < strlen(str); ++i){ */

/*         if(str[i] == '-') { */
/*             i++; */
/*             negException++; */
/*             if(negException > 1){ */
/*                 condition = true; */
/*                 break; */
/*             } */
/*         } */
/*         else if(str[i] == ' '){ */
/*             i++; */
/*             spaceException++; */
/*             if(spaceException > 1){ */
/*                 condition = true; */
/*                 break; */
/*             } */
/*         } */
/*         else if(!isdigit(str[i])){ */
/*             condition = true; */
/*             break; */
/*         } */
/*     } */
/*     return condition; */
/* }//end is_not_number() */

//Turn this into a function
/* while(twoInts[1] != 0) */    
/* { */
/*     long long r = twoInts[0] % twoInts[1]; */
/*     twoInts[0] = twoInts[1]; */
/*     twoInts[1] = r; */
/* } */

    enum { TEST_USHORT, TEST_UINT, TEST_ULONG, TEST_ULLONG } mode = TEST_USHORT;

    int opt = argv[1][1]; 

     switch(opt){
         case 'h': break;
         case 'd': mode = TEST_UINT; break; 
         case 'l': mode = TEST_ULONG; break;
         case 'L': mode = TEST_ULLONG; break;
         default:
         {
          fprintf(stderr, "Available flags (Without any numbers): %s [-h|-d|-l|-L]\n", argv[0]);
                puts("-h is an unsigned short integer");
                puts("-d is an unsigned integer");
                puts("-l is an unsigned long integer");
                puts("-L is an unsigned long long integer");
                return -1;
         }
     }

     const char* output;

    if(mode == TEST_USHORT){
        printf("It's unsigned short\n");

        unsigned short i;
        unsigned short j;

        /* uint8_t i; */
        /* uint8_t j; */

        for(i = 0; i < 10000; i++){
            for(j =0 ; j < 10000; j++){
                uint64_t gcf = calculate_gcf(i, j);
                sscanf(output, "%hi GCF %hi = %"PRIu64"\n", &i,&j, &gcf);
                printf("%s", output);
                fputs(output, file);

                /* fprintf(file, "%hu GCF %hu =%"PRIu64"\n", i,j,gcf); */
                /* printf("%hu GCF %hu = %"PRIu64"\n", i,j,gcf); */
            }
        }
        
        
    }
    else if(mode == TEST_UINT){
        printf("It's unsigned integer\n");
    }
    else if(mode == TEST_ULONG){
        printf("It's signed long\n");
    }
    else if(mode == TEST_ULLONG){
        printf("It's signed long long\n");
    }


